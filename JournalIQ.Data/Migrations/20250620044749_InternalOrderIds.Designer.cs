// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JournalIQ.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250620044749_InternalOrderIds")]
    partial class InternalOrderIds
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("JournalIQ.Core.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("JournalIQ.Core.Trade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("EntryPrice")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EntryTime")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ExitPrice")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ExitTime")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("HighDuringPosition")
                        .HasColumnType("TEXT");

                    b.Property<long>("InternalOrderId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("LowDuringPosition")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InternalOrderId")
                        .IsUnique();

                    b.ToTable("Trades");
                });

            modelBuilder.Entity("JournalIQ.Core.TradeTag", b =>
                {
                    b.Property<int>("TradeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TradeId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("TradeTag");
                });

            modelBuilder.Entity("JournalIQ.Core.TradeTag", b =>
                {
                    b.HasOne("JournalIQ.Core.Tag", "Tag")
                        .WithMany("TradeTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JournalIQ.Core.Trade", "Trade")
                        .WithMany("TradeTags")
                        .HasForeignKey("TradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("Trade");
                });

            modelBuilder.Entity("JournalIQ.Core.Tag", b =>
                {
                    b.Navigation("TradeTags");
                });

            modelBuilder.Entity("JournalIQ.Core.Trade", b =>
                {
                    b.Navigation("TradeTags");
                });
#pragma warning restore 612, 618
        }
    }
}
